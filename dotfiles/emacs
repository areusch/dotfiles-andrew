(setq emacs-extension-dir (expand-file-name "~/.emacs.d"))

;; 1) initialize melpa
(require 'package)
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  (when no-ssl
    (warn "\
Your version of Emacs does not support SSL connections,
which is unsafe because it allows man-in-the-middle attacks.
There are two things you can do about this warning:
1. Install an Emacs version that does support SSL and be safe.
2. Remove this warning from your init file so you won't see it again."))
  ;; Comment/uncomment these two lines to enable/disable MELPA and MELPA Stable as desired
  (setq package-archives (assoc-delete-all "gnu" package-archives))
  (add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t)
  ;;(add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)
  ;; For important compatibility libraries like cl-lib
  (add-to-list 'package-archives (cons "gnu" (concat proto "://elpa.gnu.org/packages/"))))
(package-initialize)

;; 2) Load traverse-accessible-dirs for load-path setup.
;; Specially loaded so we can traverse the lazy-load tree.
(load-file (concat emacs-extension-dir "/lazy-loaded/traverse-accessible-dirs.el"))

;; 3) Setup load path
(defun maybe-add-dir-to-load-path (dir &optional blacklist)
  "If dir is a directory, add it to the load path and recurse; else stop."
  (traverse-accessible-dirs
   dir
   (lambda (child)
     (if (file-accessible-directory-p child)
	 (progn
	   (add-to-list 'load-path child))))
   blacklist))

(maybe-add-dir-to-load-path (concat emacs-extension-dir "/lazy-loaded"))

;; 4) Autoloads.
(load-file (concat emacs-extension-dir "/startup-eval/autoloads.el"))

;; 5) Startup scripts.
(traverse-accessible-dirs
 (concat emacs-extension-dir "/startup-eval")
 (lambda (f)
   (if (and (string-suffix-p ".el" f)
	    (or (file-regular-p f) (file-symlink-p f)))
       (progn
         (load-file f)))))


(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(auth-sources (quote ("~/.emacs-ai" "~/.authinfo.gpg" "~/.netrc")))
 '(c-offsets-alist
   (quote
    ((member-init-intro . ++)
     (access-label . -1)
     (inextern-lang . 0)
     (innamespace . 0))))
 '(flycheck-gcc-language-standard "c++11")
 '(indent-tabs-mode nil)
 '(js2-idle-timer-delay 0.8)
 '(package-selected-packages
   (quote
    (projectile solarized-theme company-lsp flycheck lsp-ui gnu-elpa-keyring-update lsp-mode go-mode transient dash with-editor exec-path-from-shell org-gcal s auctex auctex-latexmk timesheet magit)))
 '(python-indent 2)
 '(python-indent-offset 2)
 '(send-mail-function (quote smtpmail-send-it))
 '(smtpmail-smtp-server "smtp.gmail.com")
 '(smtpmail-smtp-service 587)
 '(smtpmail-smtp-user "areusch@gmail.com")
 '(smtpmail-stream-type (quote starttls))
 '(url-debug t)
 '(user-mail-address "areusch@gmail.com")
 '(visible-bell t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
